{"remainingRequest":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/babel-loader/lib/index.js!/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Post.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Post.vue","mtime":1634648827355},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/babel-loader/lib/index.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js","mtime":1634648814815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL3dvcmtzcGFjZXMvV0VCX1NPTkFHSS1PTl91cGRyYWZ0L2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmlja25hbWU6ICdQb3N0JywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYmNMaW5rOiBbewogICAgICAgIHRleHQ6ICfrjIDsi5zrs7Trk5wnLAogICAgICAgIGRpc2FibGVkOiBmYWxzZSwKICAgICAgICBocmVmOiAnLycKICAgICAgfSwgewogICAgICAgIHRleHQ6ICfsu6TrrqTri4jti7AnLAogICAgICAgIGRpc2FibGVkOiBmYWxzZSwKICAgICAgICBocmVmOiAnY29tbXVuaXR5JwogICAgICB9XSwKICAgICAgYm9hcmRfaWQ6IG51bGwsCiAgICAgIHBvc3RfaWQ6IG51bGwsCiAgICAgIHBvc3REYXRhOiB7CiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIG5pY2tuYW1lOiAiIiwKICAgICAgICB3cml0ZV9kYXRlOiAiIiwKICAgICAgICBjb250ZW50OiAiIgogICAgICB9LAogICAgICBwcmV2cG9zdERhdGE6IHsKICAgICAgICBpZDogbnVsbCwKICAgICAgICB0aXRsZTogIiIsCiAgICAgICAgd3JpdGVfZGF0ZTogIiIKICAgICAgfSwKICAgICAgbmV4dHBvc3REYXRhOiB7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgdGl0bGU6ICIiLAogICAgICAgIHdyaXRlX2RhdGU6ICIiCiAgICAgIH0sCiAgICAgIGNvbW1lbnRzOiBbewogICAgICAgIGNsYXNzOiAiIiwKICAgICAgICBuaWNrbmFtZTogIiIsCiAgICAgICAgd3JpdGVfZGF0ZTogIiIsCiAgICAgICAgY29udGVudDogIiIKICAgICAgfV0sCiAgICAgIGNvbW1lbnQ6IHsKICAgICAgICBjb250ZW50OiAiIgogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsnaXNMb2dpbicsICdhY2Nlc3NfdG9rZW4nXSkpLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVBvc3Q6IGZ1bmN0aW9uIHVwZGF0ZVBvc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy5hY2Nlc3NfdG9rZW4pCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLmF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuJHN0b3JlLnN0YXRlLkJBQ0tFTkRfVVJMLCAiL2FwaS9jb21tdW5pdHkvcG9zdC9zaG93IiksIHsKICAgICAgICAnaWQnOiB0aGlzLnBvc3RfaWQKICAgICAgfSwgY29uZmlnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpcy5wb3N0RGF0YSA9IHJlcy5kYXRhOwogICAgICAgIHZhciB0bXAgPSBfdGhpcy5wb3N0RGF0YS53cml0ZV9kYXRlOwogICAgICAgIHRtcCA9IHRtcC5zcGxpdCgiLiIpWzBdOwogICAgICAgIF90aGlzLnBvc3REYXRhLndyaXRlX2RhdGUgPSB0bXAuc3BsaXQoIlQiKVswXSArICIgIiArIHRtcC5zcGxpdCgiVCIpWzFdLnNwbGl0KCcrJylbMF07CgogICAgICAgIGlmIChfdGhpcy5wb3N0RGF0YS5wcmV2X2lkICE9PSBudWxsKSB7CiAgICAgICAgICBfdGhpcy51cGRhdGVQcmV2KF90aGlzLnBvc3REYXRhLnByZXZfaWQpOwogICAgICAgIH0KCiAgICAgICAgaWYgKF90aGlzLnBvc3REYXRhLm5leHRfaWQgIT09IG51bGwpIHsKICAgICAgICAgIF90aGlzLnVwZGF0ZU5leHQoX3RoaXMucG9zdERhdGEubmV4dF9pZCk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJGFsZXJ0KCLshLjshZjsnbQg66eM66OM65CY7JeI7Iq164uI64ukLiDri6Tsi5wg66Gc6re47J24IO2VtOyjvOyEuOyalC4iLCAiIiwgImVycm9yIik7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZUNvbW1lbnQ6IGZ1bmN0aW9uIHVwZGF0ZUNvbW1lbnQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdmFyIGNvbmZpZyA9IHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuYWNjZXNzX3Rva2VuKQogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy5heGlvcy5wb3N0KCIiLmNvbmNhdCh0aGlzLiRzdG9yZS5zdGF0ZS5CQUNLRU5EX1VSTCwgIi9hcGkvY29tbXVuaXR5L2NvbW1lbnQvbGlzdCIpLCB7CiAgICAgICAgJ3Bvc3RfaWQnOiB0aGlzLnBvc3RfaWQKICAgICAgfSwgY29uZmlnKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczIuY29tbWVudHMgPSByZXMuZGF0YTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi4kYWxlcnQoIuyEuOyFmOydtCDrp4zro4zrkJjsl4jsirXri4jri6QuIOuLpOyLnCDroZzqt7jsnbgg7ZW07KO87IS47JqULiIsICIiLCAiZXJyb3IiKTsKICAgICAgfSk7CiAgICB9LAogICAgdXBkYXRlUHJldjogZnVuY3Rpb24gdXBkYXRlUHJldihpZCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBjb25maWcgPSB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0aGlzLmFjY2Vzc190b2tlbikKICAgICAgICB9CiAgICAgIH07CiAgICAgIHRoaXMuYXhpb3MucG9zdCgiIi5jb25jYXQodGhpcy4kc3RvcmUuc3RhdGUuQkFDS0VORF9VUkwsICIvYXBpL2NvbW11bml0eS9wb3N0L3Nob3ciKSwgewogICAgICAgICdpZCc6IGlkCiAgICAgIH0sIGNvbmZpZykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXMzLnByZXZwb3N0RGF0YSA9IHJlcy5kYXRhOwogICAgICAgIHZhciB0bXAgPSBfdGhpczMucHJldnBvc3REYXRhLndyaXRlX2RhdGU7CiAgICAgICAgX3RoaXMzLnByZXZwb3N0RGF0YS53cml0ZV9kYXRlID0gdG1wLnNwbGl0KCJUIilbMF07CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczMuJGFsZXJ0KCLshLjshZjsnbQg66eM66OM65CY7JeI7Iq164uI64ukLiDri6Tsi5wg66Gc6re47J24IO2VtOyjvOyEuOyalC4iLCAiIiwgImVycm9yIik7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZU5leHQ6IGZ1bmN0aW9uIHVwZGF0ZU5leHQoaWQpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy5hY2Nlc3NfdG9rZW4pCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLmF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuJHN0b3JlLnN0YXRlLkJBQ0tFTkRfVVJMLCAiL2FwaS9jb21tdW5pdHkvcG9zdC9zaG93IiksIHsKICAgICAgICAnaWQnOiBpZAogICAgICB9LCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNC5uZXh0cG9zdERhdGEgPSByZXMuZGF0YTsKICAgICAgICB2YXIgdG1wID0gX3RoaXM0Lm5leHRwb3N0RGF0YS53cml0ZV9kYXRlOwogICAgICAgIF90aGlzNC5uZXh0cG9zdERhdGEud3JpdGVfZGF0ZSA9IHRtcC5zcGxpdCgiVCIpWzBdOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM0LiRhbGVydCgi7IS47IWY7J20IOunjOujjOuQmOyXiOyKteuLiOuLpC4g64uk7IucIOuhnOq3uOyduCDtlbTso7zshLjsmpQuIiwgIiIsICJlcnJvciIpOwogICAgICB9KTsKICAgIH0sCiAgICB3cml0ZUNvbW1lbnQ6IGZ1bmN0aW9uIHdyaXRlQ29tbWVudCgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB2YXIgY29uZmlnID0gewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy5hY2Nlc3NfdG9rZW4pCiAgICAgICAgfQogICAgICB9OwogICAgICB0aGlzLmF4aW9zLnBvc3QoIiIuY29uY2F0KHRoaXMuJHN0b3JlLnN0YXRlLkJBQ0tFTkRfVVJMLCAiL2FwaS9jb21tdW5pdHkvY29tbWVudC93cml0ZSIpLCB7CiAgICAgICAgJ3Bvc3RfaWQnOiB0aGlzLnBvc3RfaWQsCiAgICAgICAgImNvbnRlbnQiOiB0aGlzLmNvbW1lbnQuY29udGVudAogICAgICB9LCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNS51cGRhdGVDb21tZW50KCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczUuJGFsZXJ0KCLshLjshZjsnbQg66eM66OM65CY7JeI7Iq164uI64ukLiDri6Tsi5wg66Gc6re47J24IO2VtOyjvOyEuOyalC4iLCAiIiwgImVycm9yIik7CiAgICAgIH0pOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICghdGhpcy5pc0xvZ2luKSB7CiAgICAgIHRoaXMuJGFsZXJ0KCLroZzqt7jsnbjsnbQg7ZWE7JqU7ZWcIO2OmOydtOyngOyeheuLiOuLpC4iLCAiIiwgIndhcm5pbmciKTsKICAgICAgdGhpcy4kcm91dGVyLnB1c2goIi8iKTsKICAgICAgcmV0dXJuOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5ib2FyZF9pZCA9IHRoaXMuJHJvdXRlLnF1ZXJ5LmJvYXJkX2lkOwogICAgICB0aGlzLnBvc3RfaWQgPSB0aGlzLiRyb3V0ZS5xdWVyeS5wb3N0X2lkOwogICAgICB0aGlzLnVwZGF0ZVBvc3QoKTsKICAgICAgdGhpcy51cGRhdGVDb21tZW50KCk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgJHJvdXRlOiBmdW5jdGlvbiAkcm91dGUoKSB7CiAgICAgIGlmICghdGhpcy5pc0xvZ2luKSB7CiAgICAgICAgdGhpcy4kYWxlcnQoIuuhnOq3uOyduOydtCDtlYTsmpTtlZwg7Y6Y7J207KeA7J6F64uI64ukLiIsICIiLCAid2FybmluZyIpOwogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCIvIik7CiAgICAgICAgcmV0dXJuOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucHJldnBvc3REYXRhID0ge307CiAgICAgICAgdGhpcy5uZXh0cG9zdERhdGEgPSB7fTsKICAgICAgICB0aGlzLmJvYXJkX2lkID0gdGhpcy4kcm91dGUucXVlcnkuYm9hcmRfaWQ7CiAgICAgICAgdGhpcy5wb3N0X2lkID0gdGhpcy4kcm91dGUucXVlcnkucG9zdF9pZDsKICAgICAgICB0aGlzLnVwZGF0ZVBvc3QoKTsKICAgICAgICB0aGlzLnVwZGF0ZUNvbW1lbnQoKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["Post.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card class=\"group pa-2\">\n        <v-icon small style=\"margin-left:5px\">home</v-icon>\n        <v-breadcrumbs :items=\"bcLink\"></v-breadcrumbs>\n        </v-card>\n        <v-layout justify-center>\n        <v-card class=\"pa-4 ma-4\" style=\"width: 900px;\">\n            <v-card tile class=\"elevation-0\">\n                <v-toolbar flat color=\"grey lighten-3\"><h2>{{postData.title}}</h2></v-toolbar>\n                <v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"ma-2\"><h4>작성자</h4> : {{postData.nickname}}</v-col>\n                    <v-col class=\"ma-2\" align=\"right\">\n                        <h4>작성일</h4> : {{postData.write_date}}   <h4>조회수</h4> : {{Math.floor(Math.random() * 100)}}\n                    </v-col>\n                </v-row>\n                <v-divider></v-divider>\n                <v-card tile class=\"elevation-0 ma-2\" style=\"min-height: 300px;\">\n                    {{postData.content}}\n                </v-card>\n                <div class=\"ma-2\">\n                    <v-row>\n                        <v-col>\n                            <h4>댓글</h4> {{comments.length}}\n                        </v-col>\n                        <v-col align=\"right\">\n                            <v-btn link to=\"/community\"><h4>목록</h4></v-btn>\n                        </v-col>\n                    </v-row>\n                </div>\n                <v-divider></v-divider>\n                <div>\n                    <v-card tile class=\"elevation-0 ma-4\" style=\"min-height: 100px;\">\n                        <v-row class=\"mt-2\">\n                            <v-textarea\n                            solo\n                            auto-grow\n                            nickname=\"comments\"\n                            v-model=\"comment.content\"\n                            label=\"댓글을 입력하세요.\"\n                            background-color=\"grey lighten-3\"\n                            rows=\"4\"\n                            ></v-textarea>\n                        </v-row>\n                        <v-row>\n                            <v-col align=\"right\">\n                                <v-btn @click=\"writeComment()\">댓글 작성</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                    <v-divider></v-divider>\n                </div>\n                <div v-for=\"(v, k) in comments\" :key=\"k\">\n                    <v-card tile class=\"elevation-0 ma-4\" style=\"min-height: 100px;\">\n                        <v-row>\n                            <v-col class=\"mt-2 col-2 primary--text\">{{v.class}} {{v.nickname}}</v-col>\n                            <v-col class=\"mt-2 col-3 grey--text\" align=\"left\">\n                                {{v.write_date.split('T')[0] + \" \" + v.write_date.split('T')[1].split(\".\")[0]}}\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col class=\"mb-3 ml-3\">{{v.content}}</v-col>\n                        </v-row>\n                    </v-card>\n                    <v-divider></v-divider>\n                </div>\n                <v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"col-2\">\n                        <v-card flat class=\"pa-2\" color=\"grey lighten-3\" align=\"center\">\n                            <h4>이전 글</h4>\n                        </v-card>\n                    </v-col>\n                    <v-col class=\"my-2\">\n                      <router-link :to=\"{ name: '커뮤니티 게시글', query: { board_id: board_id, post_id: prevpostData.id } }\"\n                        style=\"text-decoration: none; color: inherit;\"\n                      >\n                        {{prevpostData.title}}\n                      </router-link>\n                    </v-col>\n                    <v-col class=\"ma-2\" align=\"right\">{{prevpostData.write_date}}</v-col>\n                </v-row><v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"col-2\">\n                        <v-card flat class=\"pa-2\" color=\"grey lighten-3\" align=\"center\">\n                            <h4>다음 글</h4>\n                        </v-card>\n                    </v-col>\n                    <v-col class=\"my-2\">\n                      <router-link :to=\"{ name: '커뮤니티 게시글', query: { board_id: board_id, post_id: nextpostData.id } }\"\n                        style=\"text-decoration: none; color: inherit;\"\n                      >\n                        {{nextpostData.title}}\n                      </router-link>\n                    </v-col>\n                    <v-col class=\"ma-2\" align=\"right\">{{nextpostData.write_date}}</v-col>\n                </v-row>\n                <v-divider></v-divider>\n            </v-card>\n        </v-card>\n        </v-layout>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  nickname: 'Post',\n  data: ()=> ({\n    bcLink: [\n      {\n        text: '대시보드',\n        disabled: false,\n        href: '/',\n      },\n      {\n        text: '커뮤니티',\n        disabled: false,\n        href: 'community',\n      },\n    ],\n    board_id: null,\n    post_id: null,\n    postData:{\n      title: \"\",\n      nickname: \"\",\n      write_date: \"\",\n      content: \"\",\n    },\n    prevpostData:{\n      id: null,\n      title: \"\",\n      write_date: \"\",\n    },\n    nextpostData:{\n      id: null,\n      title: \"\",\n      write_date: \"\",\n    },\n    comments: [\n      {\n        class: \"\",\n        nickname: \"\",\n        write_date: \"\",\n        content: \"\",\n      },\n    ],\n    comment: {\n      content:\"\",\n    }\n  }),\n  computed: {\n    ...mapState(['isLogin', 'access_token']),\n  },\n  methods: {\n    updatePost: function() {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':this.post_id}, config)\n        .then((res) => {\n          this.postData = res.data;\n          let tmp = this.postData.write_date;\n          tmp = tmp.split(\".\")[0];\n          this.postData.write_date = tmp.split(\"T\")[0] + \" \" + tmp.split(\"T\")[1].split('+')[0];\n          if(this.postData.prev_id !== null){\n            this.updatePrev(this.postData.prev_id);\n          }\n          if(this.postData.next_id !== null){\n            this.updateNext(this.postData.next_id);\n          }\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updateComment: function() {\n      const config = {\n          headers: {\n            Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/comment/list`, {'post_id':this.post_id}, config)\n        .then((res) => {\n          this.comments = res.data;\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updatePrev: function(id){\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':id}, config)\n        .then((res) => {\n          this.prevpostData = res.data;\n          let tmp = this.prevpostData.write_date;\n          this.prevpostData.write_date = tmp.split(\"T\")[0];\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updateNext: function(id){\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':id}, config)\n        .then((res) => {\n          this.nextpostData = res.data;\n          let tmp = this.nextpostData.write_date;\n          this.nextpostData.write_date = tmp.split(\"T\")[0];\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    writeComment: function() {\n      const config = {\n          headers: {\n            Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/comment/write`, {'post_id':this.post_id,\"content\":this.comment.content}, config)\n        .then(() => {\n          this.updateComment();\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n  },\n  created() {\n    if(!this.isLogin){\n      this.$alert(\"로그인이 필요한 페이지입니다.\", \"\", \"warning\");\n      this.$router.push(\"/\");\n      return;\n    } else{\n      this.board_id = this.$route.query.board_id;\n      this.post_id = this.$route.query.post_id;\n      this.updatePost();\n      this.updateComment();\n    }\n  },\n  watch: {\n    $route: function(){\n        if(!this.isLogin){\n        this.$alert(\"로그인이 필요한 페이지입니다.\", \"\", \"warning\");\n        this.$router.push(\"/\");\n        return;\n      } else{\n        this.prevpostData = {};\n        this.nextpostData = {};\n        this.board_id = this.$route.query.board_id;\n        this.post_id = this.$route.query.post_id;\n        this.updatePost();\n        this.updateComment();\n      }\n    }\n  },\n}\n</script>\n\n<style>\n    h4 {display: inline;}\n</style>"],"sourceRoot":"src/views"}]}