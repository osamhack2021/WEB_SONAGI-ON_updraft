{"remainingRequest":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/WEB_SONAGI-ON_updraft/frontend/src/components/BoardList.vue?vue&type=style&index=0&id=2add92b8&scoped=true&lang=css&","dependencies":[{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/src/components/BoardList.vue","mtime":1634569050869},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kaXNhYmxlUG9pbnRlcjpsaW5rIHsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0K"},{"version":3,"sources":["BoardList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA","file":"BoardList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n      <v-layout justify-center ma-4 pa-4>\n        <v-card style=\"width: 900px;\" class=\"elevation-4 pa-2 ma-2\">\n          <v-card-title>\n            목록\n            <v-spacer></v-spacer>\n            <v-text-field\n              v-model=\"search\"\n              append-icon=\"mdi-magnify\"\n              label=\"Search\"\n              single-line\n              hide-details\n            ></v-text-field>\n          </v-card-title>\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"bdList\"\n            :search=\"search\"\n            :sort-by=\"['id']\"\n            :sort-desc=\"[true]\"\n          > \n          <template #item.title=\"{ item }\">\n            <router-link :to=\"{ name: '커뮤니티 게시글', query: { board_id: board_id, post_id: item.id } }\">\n              {{ item.title }}\n            </router-link>\n          </template>\n          </v-data-table>\n          <v-row justify=\"center\" class=\"pa-4\">\n            <v-btn link :to=\"'/community-write?board_id='+this.board_id\">\n              글쓰기\n            </v-btn>\n          </v-row>\n        </v-card>\n      </v-layout>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  props: ['board_id'],\n  name: 'BoardList',\n  computed: {\n    ...mapState(['isLogin', 'access_token']),\n  },\n  data: ()=>({\n    search: '',\n    headers: [\n      {\n        text: 'No',\n        align: 'center',\n        sortable: true,\n        value: 'id',\n        width: 30,\n      },\n      { \n        text: '제목', \n        align: 'start',\n        sortable: false,\n        value: 'title'\n      },\n      { \n        text: '작성자', \n        align: 'center',\n        sortable: false,\n        value: 'nickname',\n        width: 130,\n      },\n      { \n        text: '작성일자', \n        align: 'center',\n        sortable: false,\n        value: 'write_date', \n        width: 120,\n      },\n    ],\n    bdList: [\n    ],\n  }),\n  methods: {\n    updateBoard: function(){\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n      .post(`${this.$store.state.BACKEND_URL}/api/community/post/list`, {'board_id':this.board_id}, config)\n      .then((res) => {\n        this.bdList = res.data;\n        for (let i = 0; i < this.bdList.length; i++){\n          this.bdList[i].write_date = this.bdList[i].write_date.split('T')[0];\n        }\n      })\n      .catch(() => {\n        this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n      });\n    }\n  },\n  created() {\n    if(!this.isLogin){\n      this.$alert(\"로그인이 필요한 페이지입니다.\", \"\", \"warning\");\n      this.$router.push(\"/\");\n      return;\n    } else{\n      this.updateBoard();\n    }\n  },\n}\n</script>\n\n<style scoped>\n.disablePointer:link {\n  text-decoration: none;\n}\n</style>"]}]}