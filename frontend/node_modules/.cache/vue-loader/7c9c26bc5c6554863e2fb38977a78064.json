{"remainingRequest":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Diary.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Diary.vue","mtime":1634449137153},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEFjdGlvbnMsIG1hcFN0YXRlIH0gZnJvbSAndnVleCcKaW1wb3J0IFRpbWVsaW5lIGZyb20gJy4uL2NvbXBvbmVudHMvVGltZWxpbmUnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgIFRpbWVsaW5lCiAgfSwKICBkYXRhOiAoKT0+ICh7CiAgICBiY0xpbms6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgdGV4dDogJ+uMgOyLnOuztOuTnCcsCiAgICAgICAgICAgIGRpc2FibGVkOiBmYWxzZSwKICAgICAgICAgICAgaHJlZjogJ0Rhc2hib2FyZCcsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICB0ZXh0OiAn7J286riwJywKICAgICAgICAgICAgZGlzYWJsZWQ6IGZhbHNlLAogICAgICAgICAgICBocmVmOiAnRGlhcnknLAogICAgICAgICAgfSwKICAgICAgICBdLAogICAgZGlhcnlNb250aDogW10sCiAgICBkaWFyeURhdGE6IHt9LAogICAgaXNMb2FkZWQ6IGZhbHNlLAogIH0pLAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ2lzTG9naW4nLCAnYWNjZXNzX3Rva2VuJ10pLAogIH0sCiAgbWV0aG9kczogewogICAgLi4ubWFwQWN0aW9ucyhbJ2xvZ291dCddKSwKICAgIGluaXRUaW1lbGluZTogZnVuY3Rpb24oKXsKICAgICAgdGhpcy5kaWFyeU1vbnRoID0gW107CiAgICAgIHRoaXMuZGlhcnlEYXRhID0ge307CiAgICAgIHRoaXMuaXNMb2FkZWQgPSBmYWxzZTsKICAgICAgaWYoIXRoaXMuaXNMb2dpbil7CiAgICAgICAgdGhpcy4kYWxlcnQoIuuhnOq3uOyduOydtCDtlYTsmpTtlZwg7Y6Y7J207KeA7J6F64uI64ukLiIsIiIsIndhcm5pbmciKTsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnLycpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IGNvbmZpZyA9IHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuYWNjZXNzX3Rva2VufWAsCiAgICAgICAgICB9LAogICAgICAgIH07CiAgICAgICAgdGhpcy5heGlvcwogICAgICAgICAgLmdldChgJHt0aGlzLiRzdG9yZS5zdGF0ZS5CQUNLRU5EX1VSTH0vYXBpL2RpYXJ5L2xpc3RgLCBjb25maWcpCiAgICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIGxldCBtb250aHllYXIgPSBbXTsKICAgICAgICAgICAgbGV0IHNvcnRlZF9kYXRhID0gcmVzLmRhdGEuc29ydCgoYSxiKSA9PiB7CiAgICAgICAgICAgICAgYSA9IG5ldyBEYXRlKGEud3JpdGVfZGF0ZSk7CiAgICAgICAgICAgICAgYiA9IG5ldyBEYXRlKGIud3JpdGVfZGF0ZSk7CiAgICAgICAgICAgICAgcmV0dXJuIGEgPCBiID8gMSA6IC0xOwogICAgICAgICAgICB9KQogICAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgc29ydGVkX2RhdGEubGVuZ3RoOyBpKyspewogICAgICAgICAgICAgIGxldCB0bXAgPSBzb3J0ZWRfZGF0YVtpXVsnd3JpdGVfZGF0ZSddLnNwbGl0KCctJyk7CiAgICAgICAgICAgICAgdG1wID0gdG1wWzBdICsgIiwgIiArIHRtcFsxXSArICLsm5QiOwogICAgICAgICAgICAgIGlmICh0bXAgaW4gdGhpcy5kaWFyeURhdGEpewogICAgICAgICAgICAgICAgdGhpcy5kaWFyeURhdGFbdG1wXS5wdXNoKHNvcnRlZF9kYXRhW2ldKTsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5kaWFyeURhdGFbdG1wXSA9IFtzb3J0ZWRfZGF0YVtpXV07CiAgICAgICAgICAgICAgICB0bXAgPSAiIyIrdG1wOwogICAgICAgICAgICAgICAgbW9udGh5ZWFyLnB1c2godG1wKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5kaWFyeU1vbnRoID0gbW9udGh5ZWFyOwogICAgICAgICAgICB0aGlzLmlzTG9hZGVkID0gdHJ1ZTsKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goKCkgPT4gewogICAgICAgICAgICB0aGlzLmxvZ291dCgpOwogICAgICAgICAgICB0aGlzLiRhbGVydCgi7IS47IWY7J20IOunjOujjOuQmOyXiOyKteuLiOuLpC4g64uk7IucIOuhnOq3uOyduCDtlbTso7zshLjsmpQuIiwiIiwiZXJyb3IiKTsKICAgICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0VGltZWxpbmUoKTsKICB9LAp9Cg=="},{"version":3,"sources":["Diary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Diary.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <v-card class=\"group pa-2\">\n      <v-icon small style=\"margin-left:5px\">home</v-icon>\n      <v-breadcrumbs :items=\"bcLink\"></v-breadcrumbs>\n    </v-card>\n    <v-layout>\n    <Timeline\n      v-if=\"isLoaded\"\n      :diaryData=\"diaryData\"\n      @reload=\"initTimeline\"\n    >\n    </Timeline>\n    <v-flex xs2 sm2 md2 lg2 xl2 shrink>\n    <v-card class=\"mt-10\" style=\"position: fixed;\">\n      <v-subheader class=\"grey darken-3 white--text\" style=\"text-align: center;\">Quick List</v-subheader>\n      <v-list>    \n        <v-list-item v-for=\"item in diaryMonth\" :key=\"item\" v-bind:href=item style=\"text-align: center;\">{{item.slice(1)}}\n        </v-list-item>\n      </v-list>\n    </v-card>\n    </v-flex>\n    </v-layout>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex'\nimport Timeline from '../components/Timeline'\n\nexport default {\n  name: 'Home',\n  components: {\n    Timeline\n  },\n  data: ()=> ({\n    bcLink: [\n          {\n            text: '대시보드',\n            disabled: false,\n            href: 'Dashboard',\n          },\n          {\n            text: '일기',\n            disabled: false,\n            href: 'Diary',\n          },\n        ],\n    diaryMonth: [],\n    diaryData: {},\n    isLoaded: false,\n  }),\n  computed: {\n    ...mapState(['isLogin', 'access_token']),\n  },\n  methods: {\n    ...mapActions(['logout']),\n    initTimeline: function(){\n      this.diaryMonth = [];\n      this.diaryData = {};\n      this.isLoaded = false;\n      if(!this.isLogin){\n        this.$alert(\"로그인이 필요한 페이지입니다.\",\"\",\"warning\");\n        this.$router.push('/');\n      } else {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${this.access_token}`,\n          },\n        };\n        this.axios\n          .get(`${this.$store.state.BACKEND_URL}/api/diary/list`, config)\n          .then((res) => {\n            let monthyear = [];\n            let sorted_data = res.data.sort((a,b) => {\n              a = new Date(a.write_date);\n              b = new Date(b.write_date);\n              return a < b ? 1 : -1;\n            })\n            for(let i = 0; i < sorted_data.length; i++){\n              let tmp = sorted_data[i]['write_date'].split('-');\n              tmp = tmp[0] + \", \" + tmp[1] + \"월\";\n              if (tmp in this.diaryData){\n                this.diaryData[tmp].push(sorted_data[i]);\n              } else {\n                this.diaryData[tmp] = [sorted_data[i]];\n                tmp = \"#\"+tmp;\n                monthyear.push(tmp);\n              }\n            }\n            this.diaryMonth = monthyear;\n            this.isLoaded = true;\n          })\n          .catch(() => {\n            this.logout();\n            this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n          });\n      }\n    }\n  },\n  created() {\n    this.initTimeline();\n  },\n}\n</script>\n\n<style>\n</style>"]}]}