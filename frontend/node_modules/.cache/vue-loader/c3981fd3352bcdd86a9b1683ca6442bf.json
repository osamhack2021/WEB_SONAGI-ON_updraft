{"remainingRequest":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Post.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/src/views/Post.vue","mtime":1634648827355},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/css-loader/dist/cjs.js","mtime":1634648815811},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1634648814819},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/postcss-loader/src/index.js","mtime":1634648816479},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js","mtime":1634648814815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpoNCB7ZGlzcGxheTogaW5saW5lO30K"},{"version":3,"sources":["Post.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsRA","file":"Post.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div>\n        <v-card class=\"group pa-2\">\n        <v-icon small style=\"margin-left:5px\">home</v-icon>\n        <v-breadcrumbs :items=\"bcLink\"></v-breadcrumbs>\n        </v-card>\n        <v-layout justify-center>\n        <v-card class=\"pa-4 ma-4\" style=\"width: 900px;\">\n            <v-card tile class=\"elevation-0\">\n                <v-toolbar flat color=\"grey lighten-3\"><h2>{{postData.title}}</h2></v-toolbar>\n                <v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"ma-2\"><h4>작성자</h4> : {{postData.nickname}}</v-col>\n                    <v-col class=\"ma-2\" align=\"right\">\n                        <h4>작성일</h4> : {{postData.write_date}}   <h4>조회수</h4> : {{Math.floor(Math.random() * 100)}}\n                    </v-col>\n                </v-row>\n                <v-divider></v-divider>\n                <v-card tile class=\"elevation-0 ma-2\" style=\"min-height: 300px;\">\n                    {{postData.content}}\n                </v-card>\n                <div class=\"ma-2\">\n                    <v-row>\n                        <v-col>\n                            <h4>댓글</h4> {{comments.length}}\n                        </v-col>\n                        <v-col align=\"right\">\n                            <v-btn link to=\"/community\"><h4>목록</h4></v-btn>\n                        </v-col>\n                    </v-row>\n                </div>\n                <v-divider></v-divider>\n                <div>\n                    <v-card tile class=\"elevation-0 ma-4\" style=\"min-height: 100px;\">\n                        <v-row class=\"mt-2\">\n                            <v-textarea\n                            solo\n                            auto-grow\n                            nickname=\"comments\"\n                            v-model=\"comment.content\"\n                            label=\"댓글을 입력하세요.\"\n                            background-color=\"grey lighten-3\"\n                            rows=\"4\"\n                            ></v-textarea>\n                        </v-row>\n                        <v-row>\n                            <v-col align=\"right\">\n                                <v-btn @click=\"writeComment()\">댓글 작성</v-btn>\n                            </v-col>\n                        </v-row>\n                    </v-card>\n                    <v-divider></v-divider>\n                </div>\n                <div v-for=\"(v, k) in comments\" :key=\"k\">\n                    <v-card tile class=\"elevation-0 ma-4\" style=\"min-height: 100px;\">\n                        <v-row>\n                            <v-col class=\"mt-2 col-2 primary--text\">{{v.class}} {{v.nickname}}</v-col>\n                            <v-col class=\"mt-2 col-3 grey--text\" align=\"left\">\n                                {{v.write_date.split('T')[0] + \" \" + v.write_date.split('T')[1].split(\".\")[0]}}\n                            </v-col>\n                        </v-row>\n                        <v-row>\n                            <v-col class=\"mb-3 ml-3\">{{v.content}}</v-col>\n                        </v-row>\n                    </v-card>\n                    <v-divider></v-divider>\n                </div>\n                <v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"col-2\">\n                        <v-card flat class=\"pa-2\" color=\"grey lighten-3\" align=\"center\">\n                            <h4>이전 글</h4>\n                        </v-card>\n                    </v-col>\n                    <v-col class=\"my-2\">\n                      <router-link :to=\"{ name: '커뮤니티 게시글', query: { board_id: board_id, post_id: prevpostData.id } }\"\n                        style=\"text-decoration: none; color: inherit;\"\n                      >\n                        {{prevpostData.title}}\n                      </router-link>\n                    </v-col>\n                    <v-col class=\"ma-2\" align=\"right\">{{prevpostData.write_date}}</v-col>\n                </v-row><v-divider></v-divider>\n                <v-row>\n                    <v-col class=\"col-2\">\n                        <v-card flat class=\"pa-2\" color=\"grey lighten-3\" align=\"center\">\n                            <h4>다음 글</h4>\n                        </v-card>\n                    </v-col>\n                    <v-col class=\"my-2\">\n                      <router-link :to=\"{ name: '커뮤니티 게시글', query: { board_id: board_id, post_id: nextpostData.id } }\"\n                        style=\"text-decoration: none; color: inherit;\"\n                      >\n                        {{nextpostData.title}}\n                      </router-link>\n                    </v-col>\n                    <v-col class=\"ma-2\" align=\"right\">{{nextpostData.write_date}}</v-col>\n                </v-row>\n                <v-divider></v-divider>\n            </v-card>\n        </v-card>\n        </v-layout>\n    </div>\n</template>\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  nickname: 'Post',\n  data: ()=> ({\n    bcLink: [\n      {\n        text: '대시보드',\n        disabled: false,\n        href: '/',\n      },\n      {\n        text: '커뮤니티',\n        disabled: false,\n        href: 'community',\n      },\n    ],\n    board_id: null,\n    post_id: null,\n    postData:{\n      title: \"\",\n      nickname: \"\",\n      write_date: \"\",\n      content: \"\",\n    },\n    prevpostData:{\n      id: null,\n      title: \"\",\n      write_date: \"\",\n    },\n    nextpostData:{\n      id: null,\n      title: \"\",\n      write_date: \"\",\n    },\n    comments: [\n      {\n        class: \"\",\n        nickname: \"\",\n        write_date: \"\",\n        content: \"\",\n      },\n    ],\n    comment: {\n      content:\"\",\n    }\n  }),\n  computed: {\n    ...mapState(['isLogin', 'access_token']),\n  },\n  methods: {\n    updatePost: function() {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':this.post_id}, config)\n        .then((res) => {\n          this.postData = res.data;\n          let tmp = this.postData.write_date;\n          tmp = tmp.split(\".\")[0];\n          this.postData.write_date = tmp.split(\"T\")[0] + \" \" + tmp.split(\"T\")[1].split('+')[0];\n          if(this.postData.prev_id !== null){\n            this.updatePrev(this.postData.prev_id);\n          }\n          if(this.postData.next_id !== null){\n            this.updateNext(this.postData.next_id);\n          }\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updateComment: function() {\n      const config = {\n          headers: {\n            Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/comment/list`, {'post_id':this.post_id}, config)\n        .then((res) => {\n          this.comments = res.data;\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updatePrev: function(id){\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':id}, config)\n        .then((res) => {\n          this.prevpostData = res.data;\n          let tmp = this.prevpostData.write_date;\n          this.prevpostData.write_date = tmp.split(\"T\")[0];\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    updateNext: function(id){\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/post/show`, {'id':id}, config)\n        .then((res) => {\n          this.nextpostData = res.data;\n          let tmp = this.nextpostData.write_date;\n          this.nextpostData.write_date = tmp.split(\"T\")[0];\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n    writeComment: function() {\n      const config = {\n          headers: {\n            Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .post(`${this.$store.state.BACKEND_URL}/api/community/comment/write`, {'post_id':this.post_id,\"content\":this.comment.content}, config)\n        .then(() => {\n          this.updateComment();\n        })\n        .catch(() => {\n          this.$alert(\"세션이 만료되었습니다. 다시 로그인 해주세요.\",\"\",\"error\");\n        });\n    },\n  },\n  created() {\n    if(!this.isLogin){\n      this.$alert(\"로그인이 필요한 페이지입니다.\", \"\", \"warning\");\n      this.$router.push(\"/\");\n      return;\n    } else{\n      this.board_id = this.$route.query.board_id;\n      this.post_id = this.$route.query.post_id;\n      this.updatePost();\n      this.updateComment();\n    }\n  },\n  watch: {\n    $route: function(){\n        if(!this.isLogin){\n        this.$alert(\"로그인이 필요한 페이지입니다.\", \"\", \"warning\");\n        this.$router.push(\"/\");\n        return;\n      } else{\n        this.prevpostData = {};\n        this.nextpostData = {};\n        this.board_id = this.$route.query.board_id;\n        this.post_id = this.$route.query.post_id;\n        this.updatePost();\n        this.updateComment();\n      }\n    }\n  },\n}\n</script>\n\n<style>\n    h4 {display: inline;}\n</style>"]}]}