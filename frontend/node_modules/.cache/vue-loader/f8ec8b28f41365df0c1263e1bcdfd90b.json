{"remainingRequest":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/workspaces/WEB_SONAGI-ON_updraft/frontend/src/components/DiaryChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/src/components/DiaryChart.vue","mtime":1634648827351},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/babel-loader/lib/index.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1634648816471},{"path":"/workspaces/WEB_SONAGI-ON_updraft/frontend/node_modules/vue-loader/lib/index.js","mtime":1634648814815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAnLi9zaWRlX21vZHVsZXMvTGluZUNoYXJ0LnZ1ZScKaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKICAKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgTGluZUNoYXJ0IH0sCiAgbmFtZTogJ0RpYXJ5Q2hhcnQnLAogIGRhdGE6ICgpID0+ICh7CiAgICBpc0xvYWRlZDogZmFsc2UsCiAgICBjaGFydGRhdGE6IHsibGFiZWxzIjpbXSwgImRhdGFzZXRzIjogW3sibGFiZWwiOiIiLCJib3JkZXJDb2xvciI6ICcjRkMyNTI1JywgImRhdGEiOltdfV19LCAgICAKICAgIG9wdGlvbnM6IHsKICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkaXNwbGF5OiBmYWxzZQogICAgICB9LAogICAgICBzY2FsZXM6IHsKICAgICAgICB5QXhlczogW3sKICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgbWF4OiAzMAogICAgICAgICAgfQogICAgICAgIH1dLAogICAgICB9LAogICAgfQogIH0pLAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBTdGF0ZShbJ2lzTG9naW4nLCAndXNlcmRhdGEnLCAnYWNjZXNzX3Rva2VuJ10pLAogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlQ2hhcnQ6IGZ1bmN0aW9uKCl7CiAgICAgIHRoaXMuaXNMb2FkZWQgPSBmYWxzZTsKICAgICAgdGhpcy5jaGFydGRhdGEubGFiZWxzID0gW107CiAgICAgIGxldCB2YWx1ZSA9IFswLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwXTsKICAgICAgbGV0IGVubGlzdGVkX2RhdGUgPSBuZXcgRGF0ZSh0aGlzLnVzZXJkYXRhLmVubGlzdGVkX2RhdGUpOwogICAgICBsZXQgZGVsaXN0ZWRfZGF0ZSA9IG5ldyBEYXRlKHRoaXMudXNlcmRhdGEuZGVsaXN0ZWRfZGF0ZSk7CiAgICAgIGVubGlzdGVkX2RhdGUuc2V0RGF0ZSgxKTsKICAgICAgZGVsaXN0ZWRfZGF0ZS5zZXREYXRlKDEpOwogICAgICB3aGlsZShlbmxpc3RlZF9kYXRlIDw9IGRlbGlzdGVkX2RhdGUpewogICAgICAgIHRoaXMuY2hhcnRkYXRhLmxhYmVscy5wdXNoKGVubGlzdGVkX2RhdGUuZ2V0RnVsbFllYXIoKSsiLSIrKGVubGlzdGVkX2RhdGUuZ2V0TW9udGgoKSsxKSk7CiAgICAgICAgZW5saXN0ZWRfZGF0ZS5zZXRNb250aChlbmxpc3RlZF9kYXRlLmdldE1vbnRoKCkgKyAxKTsKICAgICAgfQogICAgICBjb25zdCBjb25maWcgPSB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuYWNjZXNzX3Rva2VufWAsCiAgICAgICAgfSwKICAgICAgfTsKICAgICAgdGhpcy5heGlvcwogICAgICAgIC5nZXQoYCR7dGhpcy4kc3RvcmUuc3RhdGUuQkFDS0VORF9VUkx9L2FwaS9kaWFyeS9saXN0YCwgY29uZmlnKQogICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCByZXMuZGF0YS5sZW5ndGg7IGkrKyl7CiAgICAgICAgICAgIGxldCB0bXAgPSBuZXcgRGF0ZShyZXMuZGF0YVtpXVsnd3JpdGVfZGF0ZSddKTsKICAgICAgICAgICAgdG1wID0gdG1wLmdldEZ1bGxZZWFyKCkrIi0iKyh0bXAuZ2V0TW9udGgoKSsxKTsKICAgICAgICAgICAgbGV0IGlkeCA9IHRoaXMuY2hhcnRkYXRhLmxhYmVscy5maW5kSW5kZXgoKHZhbCkgPT4gdmFsLmluY2x1ZGVzKHRtcCkpOwogICAgICAgICAgICB2YWx1ZVtpZHhdICs9IDE7CiAgICAgICAgICB9CiAgICAgICAgICBmb3IobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGFydGRhdGEubGFiZWxzLmxlbmd0aDsgaSsrKXsKICAgICAgICAgICAgdGhpcy5jaGFydGRhdGEubGFiZWxzW2ldID0gdGhpcy5jaGFydGRhdGEubGFiZWxzW2ldLnNwbGl0KCctJylbMV0rIuyblCI7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLmNoYXJ0ZGF0YS5sYWJlbHNbMF0gPSAi7J6F64yAIjsKICAgICAgICAgIHRoaXMuY2hhcnRkYXRhLmxhYmVsc1t0aGlzLmNoYXJ0ZGF0YS5sYWJlbHMubGVuZ3RoLTFdID0gIuyghOyXrSI7CiAgICAgICAgICB0aGlzLmNoYXJ0ZGF0YS5kYXRhc2V0c1swXS5kYXRhPSB2YWx1ZTsKICAgICAgICAgIHRoaXMuaXNMb2FkZWQgPSB0cnVlOwogICAgICAgIH0pCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgaWYodGhpcy5pc0xvZ2luKXsKICAgICAgdGhpcy51cGRhdGVDaGFydCgpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHVzZXJkYXRhOiBmdW5jdGlvbigpIHsKICAgICAgaWYodGhpcy5pc0xvZ2luKXsKICAgICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIH0KICAgIH0sCiAgICBhY2Nlc3NfdG9rZW46IGZ1bmN0aW9uKCkgewogICAgICBpZih0aGlzLmlzTG9naW4gJiYgdGhpcy5pc0xvYWRlZCl7CiAgICAgICAgdGhpcy51cGRhdGVDaGFydCgpOwogICAgICB9CiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["DiaryChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DiaryChart.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <v-skeleton-loader\n      v-if=\"!isLogin\"\n      type=\"image\"\n    > </v-skeleton-loader>\n    <LineChart\n      :height=\"150\"\n      v-else-if=\"isLoaded\"\n      :chartdata=\"chartdata\"\n      :options=\"options\">\n    </LineChart>\n  </div>\n</template>\n\n<script>\nimport LineChart from './side_modules/LineChart.vue'\nimport { mapState } from 'vuex';\n  \nexport default {\n  components: { LineChart },\n  name: 'DiaryChart',\n  data: () => ({\n    isLoaded: false,\n    chartdata: {\"labels\":[], \"datasets\": [{\"label\":\"\",\"borderColor\": '#FC2525', \"data\":[]}]},    \n    options: {\n      legend: {\n          display: false\n      },\n      scales: {\n        yAxes: [{\n          ticks: {\n            min: 0,\n            max: 30\n          }\n        }],\n      },\n    }\n  }),\n  computed: {\n    ...mapState(['isLogin', 'userdata', 'access_token']),\n  },\n  methods: {\n    updateChart: function(){\n      this.isLoaded = false;\n      this.chartdata.labels = [];\n      let value = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n      let enlisted_date = new Date(this.userdata.enlisted_date);\n      let delisted_date = new Date(this.userdata.delisted_date);\n      enlisted_date.setDate(1);\n      delisted_date.setDate(1);\n      while(enlisted_date <= delisted_date){\n        this.chartdata.labels.push(enlisted_date.getFullYear()+\"-\"+(enlisted_date.getMonth()+1));\n        enlisted_date.setMonth(enlisted_date.getMonth() + 1);\n      }\n      const config = {\n        headers: {\n          Authorization: `Bearer ${this.access_token}`,\n        },\n      };\n      this.axios\n        .get(`${this.$store.state.BACKEND_URL}/api/diary/list`, config)\n        .then((res) => {\n          for(let i = 0; i < res.data.length; i++){\n            let tmp = new Date(res.data[i]['write_date']);\n            tmp = tmp.getFullYear()+\"-\"+(tmp.getMonth()+1);\n            let idx = this.chartdata.labels.findIndex((val) => val.includes(tmp));\n            value[idx] += 1;\n          }\n          for(let i = 0; i < this.chartdata.labels.length; i++){\n            this.chartdata.labels[i] = this.chartdata.labels[i].split('-')[1]+\"월\";\n          }\n          this.chartdata.labels[0] = \"입대\";\n          this.chartdata.labels[this.chartdata.labels.length-1] = \"전역\";\n          this.chartdata.datasets[0].data= value;\n          this.isLoaded = true;\n        })\n    }\n  },\n  created() {\n    if(this.isLogin){\n      this.updateChart();\n    }\n  },\n  watch: {\n    userdata: function() {\n      if(this.isLogin){\n        this.updateChart();\n      }\n    },\n    access_token: function() {\n      if(this.isLogin && this.isLoaded){\n        this.updateChart();\n      }\n    }\n  },\n}\n</script>\n"]}]}